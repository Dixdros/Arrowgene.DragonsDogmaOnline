using System.Collections.Generic;
using Arrowgene.Buffers;
using Arrowgene.Ddon.GameServer.Dump;
using Arrowgene.Ddon.Server;
using Arrowgene.Ddon.Server.Network;
using Arrowgene.Ddon.Shared.Entity;
using Arrowgene.Ddon.Shared.Entity.PacketStructure;
using Arrowgene.Ddon.Shared.Entity.Structure;
using Arrowgene.Ddon.Shared.Network;
using Arrowgene.Logging;

namespace Arrowgene.Ddon.GameServer.Handler
{
    public class QuestQuestProgressHandler : StructurePacketHandler<GameClient, C2SQuestQuestProgressReq>
    {
        private static readonly ServerLogger Logger = LogProvider.Logger<ServerLogger>(typeof(QuestQuestProgressHandler));


        public QuestQuestProgressHandler(DdonGameServer server) : base(server)
        {
        }

        public override void Handle(GameClient client, StructurePacket<C2SQuestQuestProgressReq> packet)
        {
            EntitySerializer<S2CQuestQuestProgressRes> entitySerializer = EntitySerializer.Get<S2CQuestQuestProgressRes>();
            //var pcapRumi = entitySerializer.Read(new byte[] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0E ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0C ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x6B ,0x00 ,0x01 ,0x00 ,0x00 ,0x02 ,0x59 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00});
            //var pcapRumi2 = entitySerializer.Read(new byte[] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x11 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0xD0 ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x05 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x12 ,0x9D ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x00 ,0x00 ,0x1E ,0xBB ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x00 ,0x00 ,0x1E ,0xBC ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x33 ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x4A ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x01 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7E ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x11 ,0x00 ,0x00 ,0x1E ,0xE0 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00});
            //var pcapRumi3 = entitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x02 ,0x00 ,0x01 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x24 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x23 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x24 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x31 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3F ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x38 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x25 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x26 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x32 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x39 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x40 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x27 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x28 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x33 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x41 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2B ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2A ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x42 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3B ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x34 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2C ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x29 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3C ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x35 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x43 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2D ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x36 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3D ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x44 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2E ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x2F ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x3E ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x37 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x45 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00 ,0x58 ,0x30 ,0x00 ,0x00 ,0x00 ,0x08 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x57 ,0x00 ,0x00});
            //var pcapRumi4 = entitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x06 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x09 ,0x00 ,0x00 ,0x12 ,0x9E ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x10 ,0x00 ,0x00 ,0x1E ,0xBB ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 });
            //var pcapRumi5 = entitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0A ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x09 ,0x00 ,0x00 ,0x13 ,0xBE ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x7C ,0x00 ,0x00 ,0x1E ,0xBB ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x2F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 });
            //EntitySerializer<S2CInstanceGetEnemySetListRes> enemySetEntitySerializer = EntitySerializer.Get<S2CInstanceGetEnemySetListRes>();
            //var pcapRumi6 = enemySetEntitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x47 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0xCA ,0xE4 ,0x60 ,0x5F ,0x00 ,0x00 ,0x76 ,0x34 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x02 ,0x30 ,0x00 ,0x00 ,0x00 ,0x09 ,0xDD ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x64 ,0x00 ,0x64 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x00 ,0x00 ,0x00 ,0x01 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x8E});
            //var pcapRumi7 = enemySetEntitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x47 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00});
            //var pcapRumi8 = enemySetEntitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x47 ,0x00 ,0x00 ,0x00 ,0x00 ,0x03 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00});
            //var pcapRumi9 = entitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x10 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0E ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0C ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x6B ,0x00 ,0x01 ,0x00 ,0x00 ,0x02 ,0x59 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00});
            //var pcapRumi10 = entitySerializer.Read(new byte [] {0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x04 ,0x62 ,0x76 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x0F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x0F ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x02 ,0x00 ,0x56 ,0x00 ,0x00 ,0x04 ,0x4F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x2F ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00});
            if(packet.Structure.QuestScheduleId == 384953) {
                // Knights Bitter Enemy
                if(packet.Structure.ProcessNo == 0)
                {
                    S2CQuestQuestProgressRes res = new S2CQuestQuestProgressRes()
                    {
                        QuestScheduleId = packet.Structure.QuestScheduleId,
                        QuestProcessStateList = new List<CDataQuestProcessState>()
                        {
                            new CDataQuestProcessState()
                            {
                                ProcessNo = 1,
                                CheckCommandList = new List<CDataQuestProcessState.MtTypedArrayCDataQuestCommand>()
                                {
                                    new CDataQuestProcessState.MtTypedArrayCDataQuestCommand()
                                    {
                                        ResultCommandList = new List<CDataQuestCommand>()
                                        {
                                            new CDataQuestCommand()
                                            {
                                                Command = 2,
                                                Param01 = 100,
                                                Param02 = 26,
                                                Param03 = 0
                                            }
                                        }
                                    }
                                },
                                ResultCommandList = new List<CDataQuestCommand>()
                                {
                                    new CDataQuestCommand()
                                    {
                                        Command = 4,
                                        Param01 = 6
                                    }
                                }
                            }
                        }
                    };
                    client.Send(res);

                    // Sent for the rest of the party members
                    S2CQuestQuestProgressNtc ntc = new S2CQuestQuestProgressNtc();
                    ntc.ProgressCharacterId = packet.Structure.ProgressCharacterId;
                    ntc.QuestScheduleId = res.QuestScheduleId;
                    ntc.QuestProcessStateList = res.QuestProcessStateList;
                    client.Party.SendToAllExcept(ntc, client);
                }
                else if(packet.Structure.ProcessNo == 1) 
                {
                    S2CQuestQuestProgressRes res = new S2CQuestQuestProgressRes()
                    {
                        QuestScheduleId = packet.Structure.QuestScheduleId,
                        QuestProcessStateList = new List<CDataQuestProcessState>()
                        {
                            new CDataQuestProcessState()
                            {
                                ProcessNo = 2,
                                ResultCommandList = new List<CDataQuestCommand>()
                                {
                                    new CDataQuestCommand()
                                    {
                                        Command = 4,
                                        Param01 = 8
                                    },
                                    new CDataQuestCommand()
                                    {
                                        Command = 64,
                                    }
                                }
                            }
                        }
                    };
                    client.Send(res);

                    // Sent for the rest of the party members
                    S2CQuestQuestProgressNtc ntc = new S2CQuestQuestProgressNtc();
                    ntc.ProgressCharacterId = packet.Structure.ProgressCharacterId;
                    ntc.QuestScheduleId = res.QuestScheduleId;
                    ntc.QuestProcessStateList = res.QuestProcessStateList;
                    client.Party.SendToAllExcept(ntc, client);
                }
            } else {
                IBuffer inBuffer = new StreamBuffer(packet.Data);
                inBuffer.SetPositionStart();
                uint data0 = inBuffer.ReadUInt32(Endianness.Big);
                uint data1 = inBuffer.ReadUInt32(Endianness.Big);
                uint data2 = inBuffer.ReadUInt32(Endianness.Big);
                Logger.Debug("data0: "+data0+" data1: "+data1+" data2: "+data2+"\n");
                if(data2 == 287350)
                { 
                    client.Send(GameFull.Dump_652);
                }
                else
                {
                    IBuffer outBuffer = new StreamBuffer();
                    outBuffer.WriteInt32(0, Endianness.Big);
                    outBuffer.WriteInt32(0, Endianness.Big);
                    outBuffer.WriteByte(0); // QuestProgressResult
                    outBuffer.WriteUInt32(packet.Structure.QuestScheduleId, Endianness.Big); // QuestScheduleId
                    outBuffer.WriteUInt32(0, Endianness.Big); // QuestProgressStateList
                    //client.Send(new Packet(PacketId.S2C_QUEST_QUEST_PROGRESS_RES, outBuffer.GetAllBytes()));

                    client.Send(GameFull.Dump_166);
                    client.Send(GameFull.Dump_168);
                    client.Send(GameFull.Dump_170);
                    client.Send(GameFull.Dump_172);
                    client.Send(GameFull.Dump_175);
                    client.Send(GameFull.Dump_177);
                    client.Send(GameFull.Dump_179);
                    client.Send(GameFull.Dump_181);
                    client.Send(GameFull.Dump_185);
                    client.Send(GameFull.Dump_188);
                    client.Send(GameFull.Dump_190);
                    client.Send(GameFull.Dump_294);
                    client.Send(GameFull.Dump_297);
                    client.Send(GameFull.Dump_299);
                    client.Send(GameFull.Dump_524);
                }
            }
        }
    }
}
